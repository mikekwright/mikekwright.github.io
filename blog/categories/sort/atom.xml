<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: sort | My Fortress of Solitude]]></title>
  <link href="http://www.mikewright.me/blog/categories/sort/atom.xml" rel="self"/>
  <link href="http://www.mikewright.me/"/>
  <updated>2015-02-06T16:07:24-07:00</updated>
  <id>http://www.mikewright.me/</id>
  <author>
    <name><![CDATA[Michael Wright]]></name>
    <email><![CDATA[mkwright@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Sort2013 Part IV: TMUX - Powerup your shell]]></title>
    <link href="http://www.mikewright.me/blog/2013/10/19/sort2013-tmux-powerup-your-shell/"/>
    <updated>2013-10-19T22:43:00-06:00</updated>
    <id>http://www.mikewright.me/blog/2013/10/19/sort2013-tmux-powerup-your-shell</id>
    <content type="html"><![CDATA[<p>During sort, this session was actually a really insightful look into mouse-less productivity.<br/>
I have always been a fan of working in the console, and have actually used screen in the past.
However tmux has opened up an entirely new world for me.</p>

<p>In this post I am going to share some of the things that I have learned from using tmux
as setups I have in place for creating easy on &ldquo;dev environments&rdquo;.</p>

<!-- more -->


<h2><a href="http://tmux.sourceforge.net/">TMux overview</a></h2>

<p>Tmux is a <a href="http://en.wikipedia.org/wiki/Terminal_multiplexer">terminal multiplexer.</a> If you
are a heavy user of command line execution on nix-like environments (including ssh) than you
will want to become comfortable with using terminal multiplexers.  This will allow you to
be able to persist sessions, allow for &ldquo;remote pair-programming&rdquo; like features.</p>

<p>To work with tmux you need to realize that each tmux run creates a &ldquo;session&rdquo;.  Each session
can intern have multiple windows.  And each window has 1+ panes.  When a pane is created it
is a completely new shell environment and does not keep aliases or other configuration applied
to a previous pane.</p>

<h3>Session</h3>

<p>Session can be created using names which can allow you to easily switch between multiple
sessions depending on work you are doing.  To work with session information you start by
using</p>

<pre><code>    tmux new-session  
</code></pre>

<p>This will create a new unnamed session, which you can rename using <code>C-&lt;bindkey&gt; $</code>.  If you
want to create a session from scratch with the correct name you can use</p>

<pre><code>    tmux new-session -s &lt;name&gt;  
</code></pre>

<p>You can now disconnect from a session using <code>C-&lt;bindkey&gt; D</code>.  After disconnecting, reconnecting is accomplished using</p>

<pre><code>    tmux attach -t &lt;name&gt;
</code></pre>

<h3>Windows</h3>

<p>We have a newly created session and a single window and a pane at this point.  So lets go over
how to work with windows, both creating and navigation.</p>

<p>To create a new window from inside the session you can use the default shortcut <code>C-&lt;bindkey&gt; c</code>.
This will create a new window that will default to the window number that has already been
created.  You can also create a new window for an existing session using the following command
line call.</p>

<pre><code>    tmux new-window -t &lt;session-name&gt;
</code></pre>

<p>If you want to name this window you can either name it using the shortcut <code>C-&lt;bindkey&gt; ,</code>. You can
also name it at creation or rename from command line using one of the below commands.</p>

<pre><code>    tmux new-window -t &lt;session-name&gt; -n &lt;window-name&gt;
    tmux rename-window -t &lt;session-name&gt;:&lt;window-number&gt; &lt;window-name&gt;
</code></pre>

<p>So we have window creation and renaming, now on to window destruction.  The shortcut for
destroying the current window is <code>C-&lt;bindkey&gt; &amp;</code>.  This will prompt you before the deletion
will be completed, it will also terminal all running processes that were started in any
of the windows open panes.</p>

<p>Window navigation is also pretty straight forward. The below list is the shortcuts and can be
used when navigating.</p>

<ul>
<li><code>C-&lt;bindkey&gt; n</code> &ndash; Navigate to the next window</li>
<li><code>C-&lt;bindkey&gt; p</code> &ndash; Navigate to the previous window</li>
<li><code>C-&lt;bindkey&gt; w</code> &ndash; Open up a window chooser</li>
<li><code>C-&lt;bindkey&gt; [0-9]</code> &ndash; Quickly navigate to selected window [0-9]</li>
</ul>


<h3>Panes</h3>

<p>This is (of course) the reason we are using tmux.  The ability to work with terminals.  A
pane is always its own terminal.  Up until now we have basically defined tools used to
organize these created terminals, but panes are the only ones that are terminals.</p>

<p>Pane creation is done through window manipulation.  So you always start with your first
pane, to create a second you must <strong>SPLIT</strong> the existing pane.  Splitting the pane can
be down either vertically or horizontally.</p>

<ul>
<li><code>C-&lt;bindkey&gt; %</code> &ndash; Split pane 50% horizontally</li>
<li><code>C-&lt;bindkey&gt; "</code> &ndash; Split pane 50% vertically</li>
</ul>


<p>You can also resize existing panes by using <code>C-&lt;bindkey&gt; C-[up-down-left-right]</code>. As you use
the arrow keys it will adjust the panes giving you the exact setup you desire.  Navigating
through the panes uses nearly the same shortcuts <code>C-&lt;bindkey&gt; [up-down-left-right]</code>.</p>

<h3>Configuration</h3>

<p>Tmux also provides a means for configuring your tmux setup by supplying .tmux.conf.  Below is
the sample .tmux.conf file that was created.</p>

<p><div><script src='https://gist.github.com/7326539.js?file=.tmux.conf'></script>
<noscript><pre><code># Setting my bindkey as a
set -g prefix C-a
unbind C-b
set -s escape-time 1
bind r source-file ~/.tmux.conf \; display &quot;Reloaded.&quot;
bind C-a send-prefix
bind X kill-session
bind x kill-pane

# Vim Keys for Pane management
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

set -g default-terminal &quot;screen-256color&quot;

setw -g mode-keys vi

# Command bar
set -g message-bg colour81
set -g message-fg black 
set -g status-interval 30

# Status Bar Changes
set -g status-fg white
set -g status-bg black

# Inactive windows
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

# Active Window
setw -g window-status-current-fg black
setw -g window-status-current-bg green
setw -g window-status-current-attr bright

# Left side
set -g status-left-length 40
set -g status-left &quot;#[fg=colour155][#S] #[fg=colour110]#I #[fg=colour81]pane: #P&quot;

# Right Side
set -g status-right &quot;#[fg=colour155]#(pmset -g batt | ~/bin/battinfo.rb) | #[fg=colour45]%d %b %R&quot;
set -g status-justify centre
setw -g monitor-activity on
set -g visual-activity on</code></pre></noscript></div>
</p>

<h2>Vim Configuration</h2>

<p>So I am a huge vim fan.  Nearly every ide I have has vim mode enabled.  It is one of the
funniest things to have happen when a co-worker says &ldquo;wow you go through that fast&rdquo; and I
respond, &ldquo;it&rsquo;s just the vim binding&rdquo;.  At that point they start to laugh cause I&rsquo;m using
vim bindings, and I just shrug and say, &ldquo;Whatever makes me more productive than you ;&ndash;)&rdquo;.</p>

<p>My vim setup is pretty simple, since I use vim through ssh shells often and inside of
screen / tmux sessions, I have adjusted vim to use certain bindings that work in these
environments.</p>

<h3>Plugins</h3>

<p>To really get the power of vim you will need to have some plugins installed and setup
to be enabled in your environment.  Vim allows you to set any number of keyboard shortcuts
you would like, but I would recommend not using function keys (you can get conflicts with
some screen technologies).</p>

<ul>
<li><a href="https://github.com/tpope/vim-pathogen">Pathogen</a> &ndash; Easy Plugin Management <strong>A MUST</strong></li>
<li><a href="https://github.com/scrooloose/nerdtree">NerdTree</a> &ndash; File Explorer</li>
<li><a href="https://github.com/kien/ctrlp.vim">ctrlp</a> &ndash; Ctrl+P File Searching</li>
<li><a href="http://www.vim.org/scripts/script.php?script_id=42">bufexplorer</a></li>
<li>Colorscheme <a href="http://www.vim.org/scripts/script.php?script_id=2140">xoria256</a> &ndash; 256 trem</li>
</ul>


<h3>vimrc</h3>

<p>These are just some of the basic options that I prefer for use in my vim environment.</p>

<p><div><script src='https://gist.github.com/7326565.js?file=vimrc'></script>
<noscript><pre><code>set nocompatible
filetype on
filetype indent on
filetype plugin on

colorscheme xoria256            &quot; This does require 256 term

set smartindent
set autoindent
set expandtab
set tabstop=2
set shiftwidth=2

syntax on
set showmatch                   &quot; Show matching [] and ()
set showmode

set number
set hls    

set cf                          &quot; Enable error files &amp; error jumping.
set clipboard=unnamed           &quot; Yanks go to clipboard
set history=256
set autowrite                   &quot; Writes on make/shell commands
set ruler
set timeoutlen=250              &quot; Time to wait after ESC
set bs=2                        &quot; Backspace over everything in insert mode

set noerrorbells                &quot; No noise on errors

set laststatus=2                &quot; Always show status line

set mousehide                   &quot; Hide mouse after chars typed
set mouse=a                     &quot; Mouse is in all modes</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sort2013 Part III: Machine Learning in Python]]></title>
    <link href="http://www.mikewright.me/blog/2013/10/19/sort2013-machine-learning-in-python/"/>
    <updated>2013-10-19T22:43:00-06:00</updated>
    <id>http://www.mikewright.me/blog/2013/10/19/sort2013-machine-learning-in-python</id>
    <content type="html"><![CDATA[<p>I haven&rsquo;t done much with Machine Learning since graduating from school years ago.  However
recently there have been a number of projects where the use of machine learning can bring
a significant benefit.  This lecture was a great refresher and introduction to how
task can be accomplished using python.</p>

<p>Why should we focus on machine learning now?</p>

<p>The power of a machine learning algorithm is its ability to <strong>GENERALIZE</strong> from a finite set of examples.</p>

<!-- more -->


<ul>
<li>Database mining &ndash; Large Dataset from growth and automation, web click data, etc</li>
<li>Can get a better feel for total number of people with the flu on the <a href="http://www.google.org/flutrends/us/#US">web faster than hospitals</a></li>
<li>Hard by hand app development &ndash; Handwriting Recognition, Computer Vision, Language Processing</li>
<li>Self-customizing programs &ndash; Netflix, Amazon product recommendations, Google ads, etc</li>
<li>Prediction &ndash; Continuous outcomes, Catgorical outcomes like email spam</li>
</ul>


<h2>Clustering</h2>

<p><em>Clustering is grouping all items that have a similiar relationship than items that appear
in other clusters</em></p>

<p>There are a few types of clustering and how
<a href="http://scikit-learn.org/stable/auto_examples/cluster/plot_cluster_comparison.html">the compare</a>.
Below is alist of this different cluster types.</p>

<ul>
<li>MiniBatchKMeans</li>
<li>AffinityPropagation</li>
<li>MeanShift</li>
<li>Spectral</li>
<li>Ward</li>
<li>DBSCAN</li>
<li>K-Means</li>
</ul>


<p>In the lecture he specifically covered K-Means clustering.</p>

<h3>K-Means clustering</h3>

<p>Allows you to take a feature vector and figure out how the information should group
together (correlate)</p>

<p>Given a training data set and a number of clusters find the position of the centroids.
However the weakness you have with K is that you need to specify a number to begin
with for it to use with grouping.</p>

<p>It is often used with Image Color Compression (Converting a 16-bit image to a 6-bit image). Which
is accomplished by Replace each pixel color in the original with the color of its nearest k-means centroid.</p>

<p>Advantages</p>

<ul>
<li>Simple to implement</li>
<li>Usually very fast</li>
<li>Works well for many applications</li>
</ul>


<p>Disadvantages</p>

<ul>
<li>Have to know number of clusters in advances</li>
<li>Linear Partitioning</li>
<li>Outcome <strong>can</strong> be dependent on initial centroid position (so run multiple times with different centers)</li>
<li>Isn&rsquo;t perfect at grouping data that isn&rsquo;t seperated by equal distance (Like multiple Curves being associated instead of blobs)</li>
</ul>


<h2>Regression Prediction (Intuition)</h2>

<h3>Intuition</h3>

<ul>
<li>Supervised learning</li>
<li>Generating a graph based on points and finding the line (2D Linear Regression)</li>
<li>This is done by finding the minimal error in the generated line given the total number of points.</li>
</ul>


<h3>Gradient Descent</h3>

<ul>
<li>Define a cost function that reflects the total error as a function of the regression parameters</li>
<li>Find the parameters that then minimize the cost function
&ndash;> Start with Random parameter values
&ndash;> Adjust parameters by some step (directly in proportion to the cost function results)
&ndash;> Repeat until parameters no longer change</li>
</ul>


<h2>Classifiers</h2>

<ul>
<li>Supervised learning &ndash; training set includes &ldquo;truth&rdquo;</li>
<li>Categorical outcomes (Gaussian Mixture Model &ndash; GMM and other probabilitstic classifiers)</li>
<li>Examples
&ndash;> Logistic Regression
&ndash;> Support Vector Machine
&ndash;> Decision Tree</li>
</ul>


<h3>Metrics</h3>

<p>Precision: <em>percentage of the objects classified as A, really are A</em><br/>
Recall: <em>Of all the A objects the percentage that we actually classified as A</em></p>

<h3>Decision Tree</h3>

<ul>
<li>Object to be classified has an associated set of properties</li>
<li>classifier can be constructued as set of rules</li>
</ul>


<p>Fruit &amp; Vegetable Example</p>

<ul>
<li>Properties
&ndash;> size
&ndash;> shape
&ndash;> color</li>
<li>Rules
&ndash;> if size is small ^ shape is round ^ (color is green v color is red)
&ndash;> etc</li>
</ul>


<p>Can be constructed working with a tree that sets what is there where every leaf from a root becomes a new rule</p>

<p>Classifiers can be set using <em>entropy</em> &ndash; A coin toss has an entropy of 1 bit. The highest information gain will have the least entropy (unpredictability).</p>

<p>Overfitting is a disadvantage because it doesn&rsquo;t create the clear seperation necessary, this can be solved using &ldquo;Random Forests&rdquo; or multiple decision tress.</p>

<h2>Python</h2>

<p>The main question that one might ask is why to look into python as the language for
machine learning. Well it turns out that Python has basically become the defacto
standard for scientific tools and languages.</p>

<p>Books</p>

<ul>
<li>Python for Data Analysis</li>
</ul>


<p>Libraries</p>

<ul>
<li>Numpy</li>
<li>Scipy</li>
<li><a href="http://scikit-learn.org/stable/">Scikit-learn</a></li>
</ul>


<h2>Resources</h2>

<p>Kaggle.com is a machine learning competition problem.</p>

<p>Coursera classes</p>

<ul>
<li>Machine Learnining &ndash; Standford</li>
<li>Intro to Data Science &ndash; University of Washington</li>
<li>Discrete Optimizations</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sort2013 Part II: Design Thinking]]></title>
    <link href="http://www.mikewright.me/blog/2013/10/19/sort2013-design-thinking/"/>
    <updated>2013-10-19T22:43:00-06:00</updated>
    <id>http://www.mikewright.me/blog/2013/10/19/sort2013-design-thinking</id>
    <content type="html"><![CDATA[<p>This lecture was given by Brandon Gillespie and it was fantastic.  Below are my attempts
at creating reasonable information based on the lecture given.</p>

<p>This was a fantastic presentation that focused on delving into ideas of archiecture progress and
helpful hints that can help keep an architect moving in the correct direction.  This session
did not have any focus on specific tools so should not be limited to a certain &ldquo;type&rdquo;
of architect.</p>

<!-- More -->


<p>To start there is a comment that I would share:</p>

<p><em>How often do we get stuck &ldquo;looking at the
shingles&rdquo; as it where and forget what the real purpose of the &ldquo;house&rdquo; we are building was to
begin with?</em></p>

<h1>Overview of &ldquo;Architect&rdquo; in IT</h1>

<p>There are a few fundamental facets of a good architect.</p>

<ul>
<li>Planning &ndash; <em>Managing Change across time and expectations</em></li>
<li>Analysis &ndash; <em>Decomposition of complex systems</em></li>
<li>Communication &ndash; <em>Trusted Translator</em></li>
</ul>


<h2>Planning</h2>

<p>Planning is a fundamental aspect of architecture and design.</p>

<ul>
<li>Principle element of design!</li>
<li>Need to constantly change and improve</li>
<li>Changes takes A LONG TIME</li>
</ul>


<p>To compare the importance of it changing, lets compare it to a spoken language. And when
is a spoken language considered &ldquo;dead&rdquo;?</p>

<p><strong>A Language is considered dead when it STOPS CHANGING</strong></p>

<p>When you are planning there are a few key elements to put into play, for each plan you do.
First you need to &ldquo;make sure you really know where you are going&rdquo;.  This is fundamental since
the longer you are working on a plan the greater the likelyhood that you will run into a block
in the road.  When you reach these blocks you will need to &lsquo;fork&rsquo; your decisions to achieve
your end goal, but if you haven&rsquo;t made sure where you are going you, these forks will end
up pushing you farther and farther away from your real goal.</p>

<p>A great analogy of this behavoid can be found when compared to a farmer.  Imagine a farmar
who is plowing the field. When you start plowing, farmers will pick a post or some other
set point as a &lsquo;goal&rsquo; for him to reach.  This &ldquo;goal on the horizon&rdquo; could be a fence post or
other landmark.  This allows him to move around rocks and other &ldquo;blockers&rdquo; when tilling, but
still make the original plan he had from the beginning.</p>

<h2>Analysis</h2>

<p><strong>Decompose Complex to Simple</strong></p>

<p>The analysis section can be broken down into two seperate categories as well, A Perspective on
time that helps us to better understand how long decisions and adaptions will take and
Standards.</p>

<h3>Perspective of Time</h3>

<p>How we view the time we spend on a given problem or project allow us to can categorize
the mindset that is used.</p>

<ul>
<li>Operations &ndash; <em>Now to a few months</em></li>
<li>Engineering &ndash; <em>A few months to a year</em></li>
<li>Architect &ndash; <em>Years</em></li>
</ul>


<h3>Standards</h3>

<p>Working from a baseline and seeing what the variant from the &ldquo;standard&rdquo; that we want to see.
You need to see the variant difference (through documentation) so that you can use it to
better analysis and define a system.</p>

<ul>
<li>Flexible, accomodating</li>
<li>Allows for variances, documented by TCO</li>
</ul>


<p>There are a couple of things that you will need to watch out for when working with Standards.
The most important of these is to not create too many standards, especially those that
<a href="http://xkcd.com/927/">will be hard to adopt</a>. You also need to make sure that your standards
don&rsquo;t become a roadblock in the work you are doing.</p>

<h2>Communication</h2>

<p>This is a critical section that needs to be well thought out and understood. Infact this might
be more important than many of the other areas for an architect to be good at, since if they
can&rsquo;t communicate their thoughts and plans, those who were told will likely never achieve
the expected results.</p>

<p><em>If you cannot explain something to me in a way I can understand it, than I assume
that you don&rsquo;t understand it.</em></p>

<p>This means that if you are communicating with a relatively intelligent person you should
be able to come up with some metaphor or story or description that can be used to help
them understand.</p>

<h1>Design Thinking</h1>

<p><em>Methodology for execution of a vision</em></p>

<p>To really get you in the mode, here are some insipring quotes</p>

<ul>
<li>Vision without Execution is Hallucination &ndash; <em>Thomas Edision</em></li>
<li>You can&rsquo;t plow a field simply by turning it over in your mind &ndash; <em>President Hinckley</em></li>
<li>A goal without a plan is just a wish &ndash; <em>Antoine de Saint-Exupery</em></li>
</ul>


<p>Design thinking is a form of solution-based thinking focusing on the <em>desired achievement</em>
instead of the problem. This can help to properly bring vision to fruition (Designed vs
Organic Result)</p>

<p>Steps:</p>

<ul>
<li>Define</li>
<li>Research</li>
<li>Ideation</li>
<li>Prototype</li>
<li>Objectives</li>
<li>Implemented</li>
<li>Learn</li>
</ul>


<h2>Define</h2>

<p>When going through the Define process you should start by determining the issues that
are going to be resolved.  These are the true needs of the application or project but
they are not the requirements.  Once these requirements have been defined, the next step
is to prioritize the effort in terms of urgency.  And finally, you need to have some
measure that can be used to determine <strong>what is considered success</strong>.</p>

<h2>Research</h2>

<ul>
<li>Review history (Have we done this before, did we fail, why)</li>
<li>Talk to end user &ndash; invite for design processes to specify needs (not requirements)</li>
<li>Identify <em>thought leader&rsquo;s</em> and their roles</li>
</ul>


<h2>Ideation</h2>

<p>Clearly identify the needs and motivations of your end users (requirements analysis)</p>

<p>Brainstorm
* Make sure the group idea is the same and focused on requirements</p>

<h2>Prototype</h2>

<p>Prototype are <em>THROW AWAY</em> not &ldquo;prototype for production&rdquo;, Sometimes you need to recognize and be able to express when the cost of
keeping a prototype is more than re-writing.</p>

<ul>
<li>Rapid</li>
<li>Quicky understand direction</li>
<li>Multiple different drafts</li>
<li><em>Reserve judgment, maintain neutrality in code</em> and <em>DON&rsquo;T BE OFFENDED</em></li>
<li>Be sure to create and present actual working prototypes.</li>
<li>Final result of a prototype should be able to create a refined selection of ideas</li>
</ul>


<p><em>Make sure you can quickly recognize when you are going the wrong direction</em></p>

<h2>Objectives</h2>

<p>This is the align of the prototype and the real requirements.</p>

<ul>
<li>Set aside emotion and ownership of ideas</li>
<li>The most practical solution is not always the best solution</li>
</ul>


<h2>Implementation</h2>

<p>Never touch a production system, you can build a brand new environemnt in parallel and
then cut over to it. This can make less man power to complete and may not as expensive.</p>

<p><em>Create and execute a custom implementation plan.</em></p>

<h2>Learn</h2>

<p>Study what you implemented to learn what to do (or not do) in the future.</p>

<h2>Pitfalls</h2>

<ul>
<li>Negativity &ndash; People who only think why it won&rsquo;t work rather than a solution</li>
<li>Fear</li>
<li>Resistance</li>
<li>Devils Advocate &ndash; Good to have as long as you don&rsquo;t become a Negative person</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sort2013 Part I: A Review]]></title>
    <link href="http://www.mikewright.me/blog/2013/10/18/sort2013-a-review/"/>
    <updated>2013-10-18T22:31:00-06:00</updated>
    <id>http://www.mikewright.me/blog/2013/10/18/sort2013-a-review</id>
    <content type="html"><![CDATA[<p>SORT is a software/technology conference that is held by engineers working for the LDSChurch,
FamilySearch and Utah Based Higher Education organizations.  It is an annual conference that
is free to attend and is held at the University of Utah institute building.</p>

<p>While this may not be exactly like the other conferences you have attended, QCon and the like,
it is still a great experience, and one should never pass up the oppurtunity to learn something
new.</p>

<p>For this article I am going to focus on some of the items that I found to be beneficial to
me as a software developer (whether in practical use or just introducing new paradigms). I will
also share some of the items about SORT that I hope can be changed in the future to make the
conference even better.</p>

<!-- More -->


<h1>The Good</h1>

<p>When attending a conference, what is it you like to see?</p>

<p>For me, this question is answered by <strong>OPTIONS</strong>.  I attend conferences in hopes of increasing
my knowledge in all areas of technology.  The one belief that I have as an engineer is that
a good engineer is one who knows and understands the different paradigms and not about the
languages. As such, conferences tend to have a number of classes that can introduction me to
some new paradigms I haven&rsquo;t come across, or to help solidify my understand of another.</p>

<p>I am also a fan of conferences where the focus isn&rsquo;t just about a specific language or tool,
but rather about a mindset or possibly a process used that is new to me. As an example
I can learn about Python 3.3 latest features myself, what I want to see is how to best
use it to help increase uptime in my applications.</p>

<p>One other area of the conference that I enjoy, is the social networking. There are a lot
of good engineers who work at these conferences, however it is often difficult to meet
other engineers, just given the total number in the org.  Attending sessions can help to
show other engineers working in the same area, or at least with the same interests.</p>

<p>As much as I love SORT there are a few things that I find troublesome about the way that
sort is implimented.  These are minor issues, and ones that I am sure will be corrected
over time.</p>

<h1>The Bad</h1>

<p>One issue with attending any session or tutorial at any conference is the possibility that
a simple Javascript Testing course will turn into just a straight plug for Jasmine or Mocha.
While I love these technologies, I am always annoyed when I attend a session that doesn&rsquo;t
explicitly call out that they will show you only Jasmine features, rather than just good
Javascript testing practices.</p>

<p>This is a situation that can be easily remedied by just vetting the session descriptions
to make sure that if they are specifically going to be about a techonology or implementation,
are labeled as such.</p>

<p>I just find that when I attend a session, expecting great information on web security, and
instead hear a plug about some 3rd party vendor and exactly how to secure using their tool
rather than the appropriate practices, I feel a little jaded.</p>

<h1>Lectures</h1>

<p>Below is a list of sessions that I attended that I felt were things I wanted to share my
thoughts and learnings from. They are not necessarily the only ones I attended or the best ones
but rather had pertinant information I wanted to share.</p>

<ul>
<li><a href="/blog/2013/10/19/sort2013-tmux-powerup-your-shell">Part II &ndash; TMUX: Powerup Your Shell</a></li>
<li><a href="/blog/2013/10/19/sort2013-machine-learning-in-python">Part III &ndash; Machine Learning in Python: For fun and Profit</a></li>
<li><a href="/blog/2013/10/19/sort2013-design-thinking">Part Iv &ndash; Design Thinking</a></li>
</ul>


<h1>Conclusion</h1>

<p>If you are in the Salt Lake County or Utah County areas, and want to attend a free conference
this is a fantastic one to choose. It will run again next year in October, so be sure to check
out the <a href="https://sortreg.ldschurch.org/">Registration Site</a>.</p>
]]></content>
  </entry>
  
</feed>
